---
- name: Check blackbox_exporter exist.
  stat:
    path: "{{ blackbox_exporter_bin_path }}"
  register: blackbox_exporter_check

- name: Download and unarchive blackbox_exporter into temporary location.
  unarchive:
    src: "{{ blackbox_exporter_download_url }}"
    dest: /tmp
    remote_src: true
    mode: 0755
  when: not blackbox_exporter_check.stat.exists

- name: Move blackbox_exporter binary into place.
  copy:
    src: "/tmp/blackbox_exporter-{{ blackbox_exporter_version }}.linux-amd64/blackbox_exporter"
    dest: "{{ blackbox_exporter_bin_path }}"
    mode: 0755
    remote_src: true
  notify: restart {{ blackbox_exporter_service }}
  when: not blackbox_exporter_check.stat.exists

- name: Ensure group blackbox_exporter exists.
  group:
    name: "{{ blackbox_exporter_group }}"
    state: present

- name: Create blackbox_exporter user.
  user:
    name: "{{ blackbox_exporter_user }}"
    shell: /bin/false
    create_home: false
    state: present

- name: Create blackbox_exporter dirs.
  file:
    path: "{{ item }}"
    state: directory
    mode: 0755
    owner: "{{ blackbox_exporter_user }}"
  with_items:
    - "{{ blackbox_exporter_config_dir }}"

- name: Copy blackbox_exporter config.
  template:
    src: blackbox.yml.j2
    dest: "{{ blackbox_exporter_config_dir }}/blackbox.yml"
    owner: "{{ blackbox_exporter_user }}"
    group: "{{ blackbox_exporter_group }}"
    validate: "{{ blackbox_exporter_bin_path }} --config.check --config.file %s"
  notify:
    - restart {{ blackbox_exporter_service }}

- name: Apply elevated privileges to blackbox_exporter for ICMP probe.
  capabilities:
    path: "{{ blackbox_exporter_bin_path }}"
    capability: cap_net_raw+ep
    state: present
  notify:
    - restart {{ blackbox_exporter_service }}

- name: Copy the blackbox_exporter systemd unit file.
  template:
    src: blackbox_exporter.service.j2
    dest: /etc/systemd/system/blackbox_exporter.service
    mode: 0644
  register: blackbox_exporter_service_check

- name: Reload systemd daemon if unit file is changed.
  systemd:
    daemon_reload: true
  notify: restart {{ blackbox_exporter_service }}
  when: blackbox_exporter_service_check is changed

- name: Ensure blackbox_exporter is running and enabled at boot.
  service:
    name: "{{ blackbox_exporter_service }}"
    state: started
    enabled: true

- name: Verify blackbox_exporter is responding to requests.
  uri:
    url: "http://localhost:9115/"
    return_content: true
  register: metrics_output
  failed_when: "'Metrics' not in metrics_output.content"